name: sampath-bank-cicd-stack
services:
  # HTTPD
  httpd:
    build: httpd
    image: icr.io/n-able/ci-reverse-proxy
    volumes:
      - certbot-certs:/usr/local/apache2/keys
    networks:
      - ci-network
    ports:
      - "80:80"
      - "443:443"
    environment:
      TZ: "${TZ}"
      DOMAIN_DNS_NAME: "${DOMAIN_DNS_NAME}"
      SERVER_ADMIN_EMAIL: "${SERVER_ADMIN_EMAIL}"

  # Jenkins
  jenkins:
    build: jenkins
    image: icr.io/n-able/jenkins:lts-jdk17-jsac
    volumes:
      - jenkins-data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - ./jenkins/casc.yaml:${CASC_JENKINS_CONFIG}
      - ./jenkins/initial-jobs.groovy:${INITIAL_JOB_DSL_FILE}
    networks:
      - ci-network
    ports:
      - "8080:8080"
    group_add:
      - '988'
    secrets:
      - github-app-id
      - github-app-privkey
      - generic-webhook-token
      - nexus-jenkins-user-id
      - nexus-jenkins-user-password
    environment:
      JENKINS_URL: "${JENKINS_URL}"
      GITHUB_ORG_NAME: "${GITHUB_ORG_NAME}"
      GITHUB_APP_CRED_ID: "${GITHUB_APP_CRED_ID}"
      JOB_CREATOR_DSL_REPO: "${JOB_CREATOR_DSL_REPO}"
      SHARED_LIB_REPO: "${SHARED_LIB_REPO}"
      BUILD_SCRIPTS_REPO: "${BUILD_SCRIPTS_REPO}"
      ACE_SHARED_LIB_INDEX_URL: "${ACE_SHARED_LIB_INDEX_URL}"
      TRUNK_BRANCH_NAME: "${TRUNK_BRANCH_NAME}"
      TZ: "${TZ}"
      CASC_JENKINS_CONFIG: "${CASC_JENKINS_CONFIG}"
      INITIAL_JOB_DSL_FILE: "${INITIAL_JOB_DSL_FILE}"
  
  # SonarQube
  sonarqube:
    image: mc1arke/sonarqube-with-community-branch-plugin:lts
    depends_on:
      - db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
      SERVER_BASE_URL: "${SONARQUBE_URL}"
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions
    networks:
      - ci-network
    ports:
      - "8443:9000"
    ulimits:
      nofile: 131072
      nproc: 8192
  db:
    image: postgres:12
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data
    networks:
      - ci-network

  # Nexus
  nexus:
    build: nexus
    image: icr.io/n-able/nexus:latest-casc
    volumes:
      - nexus-data:/nexus-data
      - ./nexus/casc.yaml:${NEXUS_CASC_CONFIG}
    networks:
      - ci-network
    ports:
      - "8081:80"
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    secrets:
      - nexus-jenkins-user-id
      - nexus-jenkins-user-password
      - nexus-release-reader-user-password
    environment:
      BASE_URL: "${NEXUS_URL}"
      TZ: "${TZ}"
      NEXUS_CASC_CONFIG: "${NEXUS_CASC_CONFIG}"
      
networks:
  ci-network:
    name: ci-network
volumes:
  # Certbot
  certbot-certs:
    external: true
    name: certbot-certs
  # Jenkins
  jenkins-data:
  # SonarQube
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql:
  postgresql_data:
  # Nexus
  nexus-data:

secrets:
  github-app-id:
    file: secrets/github-app-id
  github-app-privkey:
    file: secrets/github-app-privkey
  generic-webhook-token:
    file: secrets/generic-webhook-token
  nexus-jenkins-user-id:
    file: secrets/nexus-jenkins-user-id
  nexus-jenkins-user-password:
    file: secrets/nexus-jenkins-user-password
  nexus-release-reader-user-password:
    file: secrets/nexus-release-reader-user-password
